parameters:
  - name: poolName
    type: string
    default: ""
  - name: environment
    type: string
    default: ""
  - name: azureSubscription
    type: string
    default: ""
  - name: packerTemplateRepo
    type: string
    default: ""
  - name: packerTemplateRepoBranch
    type: string
    default: ""
  - name: packerTemplateFile
    type: string
    default: ""
  - name: preBuild
    type: stepList
    default: []
  - name: postBuild
    type: stepList
    default: []
  - name: binaries
    type: object
    default: []

jobs:
  - job: build_image_${{ parameters.environment }}
    displayName: Build packer image for ${{ parameters.environment }}
    pool:
      name: ${{ parameters.poolName }}
    continueOnError: false
    steps:
      - ${{ parameters.preBuild }}
      - bash: |
          if [ -z "$PACKER_TEMPLATE_FILE" ]; then
            echo "##vso[task.logissue type=error;]Missing template parameter \"packerTemplateFile\""
            echo "##vso[task.complete result=Failed;]"
          fi
        env:
          PACKER_TEMPLATE_FILE: ${{ parameters.packerTemplateFile }}
        displayName: Check for required parameters
      - bash: |
          set -ex
          # Download
          wget https://releases.hashicorp.com/packer/${PACKER_TAG}/packer_${PACKER_TAG}_linux_amd64.zip
          DOWNLOAD_PACKER_SHA=$(openssl sha1 -sha256 packer_${PACKER_TAG}_linux_amd64.zip | awk '{print $2}')
          if [[ "${PACKER_SHA}" != "${PACKER_SHA}" ]]; then
              echo "Downloaded checksum (${DOWNLOAD_PACKER_SHA}) for hadolint does not match expected value: ${PACKER_SHA}"
              exit 1
          fi
          unzip packer_${PACKER_TAG}_linux_amd64.zip
        displayName: Download packer
        env:
          PACKER_TAG: ${{ parameters.binaries.packer.tag }}
          PACKER_SHA: ${{ parameters.binaries.packer.sha }}
      - bash: |
          set -ex
          git clone -c advice.detachedHead=false --single-branch --branch "${PACKER_TEMPLATE_REPO_BRANCH}" ${PACKER_TEMPLATE_REPO} remote-templates
        env:
          PACKER_TEMPLATE_REPO: ${{ parameters.packerTemplateRepo }}
          PACKER_TEMPLATE_REPO_BRANCH: ${{ parameters.packerTemplateRepoBranch }}
        displayName: "Checkout packer remote templates"
      - task: AzureCLI@2
        displayName: "Run packer"
        inputs:
          azureSubscription: ${{ format(parameters.azureSubscriptionTemplate, env.name) }}
          addSpnToEnvironment: true
          workingDirectory: "."
          scriptLocation: inlineScript
          scriptType: bash
          inlineScript: |
            set -ex
            printenv
            ./packer build remote-templates/${PACKER_TEMPLATE_FILE}
        env:
          PACKER_TEMPLATE_FILE: ${{ parameters.packerTemplateFile }}
      - ${{ parameters.postBuild }}
