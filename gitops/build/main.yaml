parameters:
  poolVmImage: "ubuntu-16.04"
  poolName: ""
  sourceBranch: "refs/heads/master"
  dockerfilePath: "./Dockerfile"
  serviceName: ""
stages:
  - stage: build
    jobs:
      - job: image
        pool:
          ${{ if not(eq(parameters.poolName, '')) }}:
            name: ${{ parameters.poolName }}
          ${{ if not(eq(parameters.vmImage, '')) }}:
            vmImage: ${{ parameters.vmImage }}
        continueOnError: false
        steps:
          - bash: |
              set -e
              imageTag=${$(Build.SourceVersion):0:7}
              echo "##vso[task.setvariable variable=imageTag]$imageTag"
            displayName: "Calculate image tag"

          - variables:
              serviceName: "${{ coalesce(parameters.serviceName, Build.Repository.Name) }}"

          - variables:
              imageId: "$(serviceName):$(imageTag)"

          - bash: |
              set -ex
              docker build -f ${{ parameters.dockerfilePath }} -t $(imageId) .
              docker save $(imageId) | gzip > $(imageId).tar.gz
            displayName: "Build and save image"
            condition: and(succeeded(), eq(variables['Build.sourceBranch'], '${{ parameters.sourceBranch }}'))

          - task: PublishPipelineArtifact@1
            displayName: "Publish Azure Pipelines Artifact"
            inputs:
              targetPath: $(imageId).tar.gz
              artifactName: $(serviceName)
            condition: and(succeeded(), eq(variables['Build.sourceBranch'], '${{ parameters.sourceBranch }}'))
