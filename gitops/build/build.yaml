parameters:
  poolVmImage: "ubuntu-16.04" # vm image to use if azure build pool
  poolName: "" # name of pool to use
  sourceBranch: "refs/heads/master" # refs to limit builds to
  dockerfilePath: "./Dockerfile" # path to dockerfile
  serviceName: "" # name of service used in image tag
stages:
- stage: build
  jobs:
    - job: image
      pool:
        ${{ if not(eq(parameters.poolName, '')) }}:
          name: ${{ parameters.poolName }}
        ${{ if not(eq(parameters.vmImage, '')) }}:
          vmImage: ${{ parameters.vmImage }}
      continueOnError: false
      steps:
        - bash: |
            NAME=${SERVICE_NAME:-$REPO_NAME}
            echo "##vso[task.setvariable variable=serviceName]$NAME"
          displayName: Set default values
          env:
            SERVICE_NAME: ${{ parameters.serviceName }}
            REPO_NAME: ${{ variables.Build.Repository.Name }}

        - bash: |
            set -e
            shortHash=${sourceVersion:0:7}
            echo "Long commit hash: ${sourceVersion}"
            echo "Short commit hash: ${shortHash}"
            echo "##vso[task.setvariable variable=shortHash]$shortHash"
          displayName: "Generate short commit hash (7-char git hash)"
          env:
            sourceVersion: $(Build.SourceVersion)

        - bash: |
            set -e
            echo "Running docker build:\n"
            docker build -f ${{ parameters.dockerfilePath }} -t $(serviceName):$(shortHash) .
            echo "Running docker save:\n"
            docker save $(.serviceName):$(shortHash) | gzip > $(serviceName)_$(shortHash).tar.gz
          displayName: "Build and save image"
          condition: and(succeeded(), eq(variables['Build.sourceBranch'], "${{ parameters.sourceBranch }}"))

        - task: PublishPipelineArtifact@1
          displayName: "Publish Azure Pipelines Artifact"
          inputs:
            targetPath: $(serviceName)_$(shortHash).tar.gz
            artifactName: $(serviceName)
          condition: and(succeeded(), eq(variables['Build.sourceBranch'], "${{ parameters.sourceBranch }}"))
